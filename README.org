* devos
test-driven dynamically-themed well-documented host-development
** FEATURES
*** WIP TTD
  - lib (TODO)
  - profiles
  - modules
  - suites
  - hosts
*** WIP dynamicTheme
- ~bud theme {dracula,gruvbox,...}~
- automagically all (WIP)  programs change their appearance
*** WIP doc.local
- a documentation-server displaying on each host only the available features
*** WIP cookbook
- nix isn't that convenient
- keep solved {issues,solutions,ideas} in one handy location
- ingredients
- recipies
*** WIP manualActions
- keep track of actions (todos)(tasks should be automated) which have to be done manually
***  hjkl ‚ü∂ jkl;
****  TODO TODOS
- ~nix log~
- ~gotop~
** ROADMAP
*** make ryzen useable
**** DONE i3 (x)
**** DONE emacs
**** DONE browser
chromium
*** hardwareAcceleration
*** after acceleration or on ryzen
**** secrets
**** borg
**** manualActions
**** colorschemes
**** cleanup
***** documentation
***** TODOS
***** {fixMissing,improve} tests
Do not test for existence, test behavior
**** langs
***** nixlang
****** [#A] lsp
***** python
****** [#A] lsp in tests
******* machine
******* driver
******* lib.testing
*** ISO (FULL)
*** RESCUE-STICK
*** DEV-STICK
*** LATER
**** langs
***** golang
***** flutter
**** k8s
**** firefox
***** addons
**** nuc
**** wayland
**** music
**** pulsewire
**** Lutris
**** mac
***** transfer all configs (=etc/nixos=, =~/.config=)
***** data via borg
***** cleanup
***** new SSD
***** devos
** COMMANDS
*** if nix <2.4 is use run:
#+BEGIN_SRC shell :results drawer
  alias nix='nix --extra-experimental-features nix-command --extra-experimental-features flakes'
#+END_SRC
or set them =~/.config/nix/nix.conf=
*** print available commands
#+BEGIN_SRC shell :results drawer
  menu
#+END_SRC
*** check editorconfig
#+BEGIN_SRC shell :results drawer
  editorconfig-checker
#+END_SRC
*** remove all build-files
#+BEGIN_SRC shell :results drawer
  bud nuke
#+END_SRC
*** create iso
#+BEGIN_SRC shell :results drawer
  bud build isoBase bootstrapIso --extra-experimental-features nix-command --extra-experimental-features flakes
  bud build isoBase bootstrapIso flakes
#+END_SRC
*** burn iso onto stick
#+BEGIN_SRC shell :results drawer
  bud nuke
#+END_SRC
#+BEGIN_SRC shell :results drawer
  sudo -E $(which bud) burn
#+END_SRC
*** checks / tests
**** checks
#+BEGIN_SRC shell :results drawer
nix --extra-experimental-features nix-command --extra-experimental-features flakes  flake check
nix flake check
#+END_SRC
**** integrationTests
#+BEGIN_SRC shell :results drawer
nix build .#tests.integrationTests.test.x86_64-linux.pythonTest
#+END_SRC
*** DEBUGGING
**** load flake in repl
#+BEGIN_SRC shell :results drawer
  nix repl
#+END_SRC
#+BEGIN_EXAMPLE shell
> :lf ./.
#+END_EXAMPLE
** INFO
*** testing
**** view used sources for python-tests
on repl
load flake
and
~:e nixosConfigurations.NixOS.pkgs.path~
navigate to
- =nixos/tests/make-test-python.nix=
- =nixos/lib/testing-python.nix=
** TODOS
*** TODO documentation
**** color
***** ranger uses terminal colors
https://github.com/ranger/ranger/blob/master/doc/colorschemes.md
