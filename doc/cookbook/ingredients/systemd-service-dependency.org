* systemd service with dependency
#+BEGIN_EXAMPLE nix
{ pkgs, ... }:
{
  ### Enable the documentationService
  # systemd.user.services.doc = {
    systemd.services.documentation = {
      description   = "docService";
      enable        = true;
      serviceConfig = {
        Type       = "simple";
        ExecStart  = "${pkgs.hugo}/bin/hugo serve -p 41503 -s /etc/docLocal";

        # ExecReload = "${pkgs.coreutils}/bin/kill -HUP  $MAINPID";
        # ExecStop   = "${pkgs.coreutils}/bin/kill -TERM $MAINPID";

        ExecReload = "${pkgs.procps}/bin/pkill -HUP     $MAINPID";
        ExecStop   = "${pkgs.procps}/bin/pkill -SIGTERM $MAINPID";

        Restart    = "on-failure";
        RestartSec = 1;
      };
      unitConfig    = {
        requires = [ "hugo.service" ];
        after    = [ "hugo.service" ];
      };
      wantedBy      = [ "default.target" ];
    };
    ### create example site
    ### TODO: cp required hugo files + build colors.scss.nix
    systemd.services.hugo = {
      description   = "createHugo";
      enable        = true;
      serviceConfig = {
        Type      = "oneshot";
        ExecStart = "${pkgs.hugo}/bin/hugo new site /etc/docLocal";
      };
      wantedBy      = [ "default.target" ];
    };
}
#+END_EXAMPLE
** TODO TODOS
*** hugoify
